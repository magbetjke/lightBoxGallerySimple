<?xml version="1.0"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:comps="*">

    <comps:GalleryImage id="shownImage" width="263" height="157" click="showNext()" visible="{!modalLayer.visible}"/>

    <mx:Image id="zoomBtn"
              x="{shownImage.width - zoomBtn.width - 15}" y="{shownImage.height - zoomBtn.height - 15}"
              alpha=".5"
              visible="{!modalLayer.visible}"
              source="@Embed(source='/assets/plus.png')"
              mouseOver="{zoomBtn.alpha = 1}" mouseOut="{zoomBtn.alpha = .5}"
              click="openLightBox()"/>
    <mx:UIComponent id="modalLayer" width="100%" height="100%"/>
    <mx:Script><![CDATA[
        private var _dataProvider:Vector.<String>;
        private var _loader:Loader;

        private var _counter:int = 0;
        private var _progress:int = 0;

        private var _bitmaps:Vector.<Bitmap>;

        private var _selectedImageIndex:int = -1;

        public function set dataProvider(value:Vector.<String>):void {
            if (_dataProvider == value) return;

            _dataProvider = value;

            _bitmaps = new <Bitmap>[];

            _selectedImageIndex = -1;

            loadImages();

        }

        private function loadImages():void {
            if (_dataProvider && _dataProvider.length){

                modalLayer.visible = true;
                GalleryProgressBar.instance.open(modalLayer);

                _counter = _dataProvider.length;
                _progress = _counter;
                for each (var url:String in _dataProvider) {
                        var loader:Loader = new Loader();
                        var urlRequest:URLRequest = new URLRequest(url);
                        loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete);
                        loader.addEventListener(IOErrorEvent.IO_ERROR, ioError);
                        loader.addEventListener(IOErrorEvent.DISK_ERROR, ioError);
                        loader.addEventListener(IOErrorEvent.NETWORK_ERROR, ioError);
                        loader.addEventListener(IOErrorEvent.VERIFY_ERROR, ioError);

                        loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioError);
                        loader.contentLoaderInfo.addEventListener(IOErrorEvent.DISK_ERROR, ioError);
                        loader.contentLoaderInfo.addEventListener(IOErrorEvent.NETWORK_ERROR, ioError);
                        loader.contentLoaderInfo.addEventListener(IOErrorEvent.VERIFY_ERROR, ioError);
                        loader.load(urlRequest);
                }
            }
        }

        private function ioError(event:IOErrorEvent):void {
            _bitmaps.push(null);
            decreaseCounter();
        }

        private function onComplete(event:Event):void {
            //var bd:BitmapData =  Bitmap(event.currentTarget.content);
            var bitmap:Bitmap = Bitmap(LoaderInfo(event.currentTarget).content);
            _bitmaps.push(bitmap);
            decreaseCounter();
        }

        private function decreaseCounter():void {
            _counter--;
            GalleryProgressBar.instance.progress((_progress - _counter) / _progress);

            if (!_counter){
                setTimeout(function x():void {
                    GalleryProgressBar.instance.close();
                    modalLayer.visible = false;
                    showNext();
                }, 1000);
            }
        }

        private function showNext():void {
            _selectedImageIndex = (_selectedImageIndex + 1) % _bitmaps.length;
            shownImage.source = _bitmaps[_selectedImageIndex];

        }

        private function showPrev():void {
            _selectedImageIndex = --_selectedImageIndex < 0 ? _bitmaps.length - 1 : _selectedImageIndex;
            shownImage.source = _bitmaps[_selectedImageIndex];
        }

        private function openLightBox():void {
            if (_bitmaps[_selectedImageIndex]){
                var bitmap:Bitmap = new Bitmap(_bitmaps[_selectedImageIndex].bitmapData);
                LightBox.show(bitmap);
            }
        }

        ]]></mx:Script>
</mx:Canvas>
